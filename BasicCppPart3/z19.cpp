/*
У каждого из нас есть повторяющиеся ежемесячные дела, каждое из которых нужно выполнять в конкретный день
каждого месяца: оплата счетов за электричество, абонентская плата за связь и пр.
Вам нужно реализовать работу со списком таких дел на месяц, а именно, реализовать набор следующих операций:
ADD i s
Назначить дело с названием s на день i текущего месяца.
DUMP i
Вывести все дела, запланированные на день i текущего месяца.
NEXT
Перейти к списку дел на новый месяц. При выполнении данной команды вместо текущего (старого) списка дел
на текущий месяц создаётся и становится активным (новый) список дел на следующий месяц:
все дела со старого списка дел копируются в новый список. После выполнения данной команды новый список
дел и следующий месяц становятся текущими, а работа со старым списком дел прекращается.
При переходе к новому месяцу необходимо обратить внимание на разное количество дней в месяцах:
если следующий месяц имеет больше дней, чем текущий, «дополнительные» дни необходимо оставить пустыми
(не содержащими дел);
если следующий месяц имеет меньше дней, чем текущий, дела со всех «лишних» дней необходимо переместить
на последний день следующего месяца.
Замечания
Историю списков дел хранить не требуется, работа ведется только с текущим списком дел текущего месяца.
Более того, при создании списка дел на следующий месяц, он «перетирает» предыдущий список.
Обратите внимание, что количество команд NEXT в общей последовательности команд при работе со списком
дел может превышать 11.
Начальным текущим месяцем считается январь.
Количества дней в месяцах соответствуют Григорианскому календарю с той лишь разницей,
что в феврале всегда 28 дней.
Формат ввода
Сначала число операций Q, затем описания операций.
Названия дел s уникальны и состоят только из латинских букв, цифр и символов подчёркивания. Номера дней i являются целыми числами и нумеруются от 1 до размера текущего месяца.
Формат вывода
Для каждой операции типа DUMP в отдельной строке выведите количество дел в соответствующий день, а затем их названия, разделяя их пробелом. Порядок вывода дел в рамках каждой операции значения не имеет.
*/

#include <iostream>
#include <vector>
using namespace std;

void ADD(vector<vector<string>>& toDoList, const int& dayNumber, const string& doName) {
	// Добавить название дела в список дел в месяце по номеру дня.
	toDoList[dayNumber].insert(end(toDoList[dayNumber]), doName);
}

int main() {
	// Количество дней в месяцах.
	vector<int> daysOfMonths = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	// Номер текущего месяца.
	int currentMonth = 0;
	// Число дней в текущем месяце.
	int daysCount = daysOfMonths[currentMonth];

	// Вектор-список дел на каждый день месяца. Список дел одного дня представлен вектором строк.
	vector<vector<string>> toDoList(daysCount);
	// Ожидаемое число команд.
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		// Введенная команда.
		string command;
		cin >> command;
		if (command == "ADD") {
			// Номер дня для добавления дела.
			int i;
			// Название дела.
			string s;
			cin >> i;
			cin >> s;
			ADD(toDoList, --i, s);
		}
		else if (command == "DUMP") {
			// Номер запрашиваемого дня.
			int i;
			cin >> i;
			// Корректировка индекса с учетом дня месяца.
			--i;
			// Число дел на запрашиваемый день.
			int affairCount = toDoList[i].size();
			// Вывод количества дел на день.
			cout << toDoList[i].size() << " ";
			// Вывод названий дел на день.
			for (auto& affair : toDoList[i]) {
				cout << affair << " ";
			}
			cout << endl;
		}
		else if (command == "NEXT") {
			// Увеличить номер текущего месяца.
			currentMonth++;
			// Количество дней в новом месяце и в предыдущем.
			int currentCount = daysOfMonths[currentMonth],
				previousCount = daysOfMonths[currentMonth - 1];
			// Если в новом месяце дней меньше, чем в предыдущем.
			if (currentCount < previousCount) {
				// Перебрать "лишние" дни предыдущего месяца.
				for (int day = currentCount; day < previousCount; day++) {
					// Дописать "лишние" дела на последний день нового месяца.
					toDoList[currentCount - 1].insert(
						end(toDoList[currentCount - 1]),
						begin(toDoList[day]),
						end(toDoList[day])
					);
				}
			}
			// Изменить число дней в списке дел.
			toDoList.resize(currentCount);
		}
	}

	return 0;
}